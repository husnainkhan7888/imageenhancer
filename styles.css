// Crop
document.getElementById('cropBtn').addEventListener('click', () => {
    const activeObj = canvas.getActiveObject();
    if (!activeObj || !(activeObj instanceof fabric.Image)) {
        alert('Select an image to crop.');
        return;
    }

    const rect = new fabric.Rect({
        left: activeObj.left,
        top: activeObj.top,
        width: activeObj.width * 0.5,
        height: activeObj.height * 0.5,
        fill: 'transparent',
        stroke: '#e74c3c',
        strokeWidth: 2,
        selectable: true,
    });

    canvas.add(rect);
    canvas.setActiveObject(rect);
    canvas.renderAll();

    setTimeout(() => {
        const cropRect = canvas.getActiveObject();
        if (cropRect && cropRect.type === 'rect') {
            const croppedImg = new fabric.Image(activeObj.getElement(), {
                left: cropRect.left,
                top: cropRect.top,
                width: cropRect.width,
                height: cropRect.height,
                clipPath: cropRect,
            });
            canvas.remove(activeObj);
            canvas.remove(cropRect);
            canvas.add(croppedImg);
            canvas.renderAll();
        }
    }, 100);
});

// Rotate
document.getElementById('rotateBtn').addEventListener('click', () => {
    const activeObj = canvas.getActiveObject();
    if (!activeObj) {
        alert('Select an object to rotate.');
        return;
    }
    activeObj.rotate(activeObj.angle + 90);
    canvas.renderAll();
});

// Add Text
document.getElementById('textBtn').addEventListener('click', () => {
    const text = new fabric.Textbox('Type here...', {
        left: 50,
        top: 50,
        fontSize: 24,
        fill: '#333',
        fontFamily: 'Arial',
        editable: true,
    });
    canvas.add(text);
    canvas.setActiveObject(text);
    canvas.renderAll();
});

// Undo/Redo
let undoStack = [];
let redoStack = [];

canvas.on('object:added', () => saveState());

function saveState() {
    undoStack.push(JSON.stringify(canvas));
    redoStack = [];
}

document.getElementById('undoBtn').addEventListener('click', () => {
    if (undoStack.length > 1) {
        redoStack.push(undoStack.pop());
        canvas.loadFromJSON(undoStack[undoStack.length - 1], () => canvas.renderAll());
    }
});

document.getElementById('redoBtn').addEventListener('click', () => {
    if (redoStack.length > 0) {
        const state = redoStack.pop();
        undoStack.push(state);
        canvas.loadFromJSON(state, () => canvas.renderAll());
    }
});
